In double quote: 
     - word splitting, 
     - pathname expansion, 
     - tilde expansion, 
     - and brance expansion
    lose their special meaning
    However, the follow still take place in double quote:
      - $x 	    parameter expansion
      - $((x))	arithmetic expansion
      - $(x)	command substitution
      - `x`	    old style command substitution
      - \x   	escape
    So 
        $ echo "$TERM $((2+2)) give you > cygwin 4
        
    Consider this:
        $ echo $(cal)
        > August 2013 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        unquoted command substitution resulted in a 
        command line containing 38 arguments;

    
        $ echo "$(cal)"
             August 2013
        Su Mo Tu We Th Fr Sa
                     1  2  3
         4  5  6  7  8  9 10
        11 12 13 14 15 16 17
        18 19 20 21 22 23 24
        25 26 27 28 29 30 31
        
        Quoted command substitution result in a command line 
        with 1 argument that includes the embedded spaces and
        newlines.

        
[!] Single quote supression all expansions

